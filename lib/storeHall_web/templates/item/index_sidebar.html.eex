
<sidebar-filters>
  <%= form_for @conn, Routes.item_path(@conn, :index), [as: :filter, method: :get, enforce_utf8: false, id: "form-filter"], fn f -> %>

    <div class="tab">
      <!-- TODO:maybe use some spellchecker or suggestions -->
      <%= text_input f, :q, placeholder: Gettext.gettext("Search by title, content..."),
        class: "auto-submit-item" %>

      <%= submit Gettext.gettext("Submit") %>
    </div>

    <%= if false do %>
      <label for="with-image">With image:
        <% checkbox f, :"with-image", class: "auto-submit-item", hidden_input: false %>
      </label>

      <div class="tab">
        <input type="checkbox" id="custom" class="collapsible">
        <label class="tab-label" for="custom">Custom:</label>
        <div class="tab-content">
          <% textarea  f, :"custom-filters", class: "auto-submit-item resizable-content",
          value: Jason.encode!(f.params["custom-filters"]) |> String.replace(",\"", ",\n\"") %>
        </div>
      </div>
    <% end %>

    <div class="tab">
      <input type="checkbox" id="sort" class="collapsible">
      <label class="tab-label" for="sort"><%= Gettext.gettext("Sorting") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Sort") %>'>
          <%= text_input f, :sort, class: "auto-submit-item" %>
          <%= select f, :sort_select, StoreHall.DefaultFilter.accepted_sorting(), name: nil %>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="price-min" class="collapsible">
      <label class="tab-label" for="price-min"><%= Gettext.gettext("Price") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :price_min,
              class: "min",
              min: 0, step: 0.01,
              name: "filter[price][min]",
              value: f.params["price"]["min"] %>
            <%= number_input f, :price_max,
              class: "max",
              min: 0, step: 0.01,
              name: "filter[price][max]",
              value: f.params["price"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :price_min_slider,
              min: 0, max: 1000, step: 1,
              class: "min-slider auto-submit-item",
              value: f.params["price"]["min"] || 0 %>

            <%= range_input f, :price_max_slider,
              min: 0, max: 1000, step: 1,
              class: "max-slider auto-submit-item",
              value: f.params["price"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="discount-min" class="collapsible">
      <label class="tab-label" for="discount-min"><%= Gettext.gettext("Discount") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :discount_min,
              class: "min",
              min: 0, step: 0.01, max: 100,
              name: "filter[discount][min]",
              value: f.params["discount"]["min"] %>
            <%= number_input f, :discount_max,
              class: "max",
              min: 0, step: 0.01, max: 100,
              name: "filter[discount][max]",
              value: f.params["discount"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :discount_min_slider,
              min: 0, max: 100, step: 1,
              class: "min-slider auto-submit-item",
              value: f.params["discount"]["min"] || 0 %>

            <%= range_input f, :discount_max_slider,
              min: 0, max: 100, step: 1,
              class: "max-slider auto-submit-item",
              value: f.params["discount"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="location" class="collapsible">
      <label class="tab-label" for="location"><%= Gettext.gettext("City") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :cities, class: "auto-submit-item" %>
          <%= select f, :cities_select,
                    @conn.assigns.filters["cities"]
                    |> Enum.map(fn {k, _v} -> {k, k} end),
                    name: nil %>
        </div>
      </div>
    </div>




    <div class="tab">
      <input type="checkbox" id="merchant_type" class="collapsible">
      <label class="tab-label" for="merchant_type"><%= Gettext.gettext("Merchant type") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :merchant_type, class: "auto-submit-item" %>
          <%= select f, :merchant_type_select,
                    StoreHall.DefaultFilter.accepted_merchant_type(),
                    name: nil %>
        </div>
      </div>
    </div>




    <div class="tab">
      <input type="checkbox" id="merchants" class="collapsible">
      <label class="tab-label" for="merchants"><%= Gettext.gettext("Merchants") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :merchant, class: "auto-submit-item" %>
          <%= select f, :merchant_select,
            @conn.assigns.filters["merchant"]
            |> Enum.map(fn {k, _v} -> {k, k} end),
            name: nil %>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="tags" class="collapsible">
      <label class="tab-label" for="tags"><%= Gettext.gettext("Tags") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :tags, class: "auto-submit-item" %>
          <%= select f, :tags_select,
            @conn.assigns.filters["tags"]
            |> Enum.map(fn {k, _v} -> {k |> String.replace(~r/[^\/]*\//, "_  "), k} end),
            name: nil %>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="features" class="collapsible">
      <label class="tab-label" for="features"><%= Gettext.gettext("Features") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>' allow_duplicate="true">
          <%= text_input f, :features, class: "auto-submit-item", value: f.params["features"] || %{} %>
          <%= select f, :features_select, StoreHall.Items.get_feature_filters(@conn.assigns.items), name: nil %>
          <template data-key="_key_" data-value="_value_">
            <span>_key_</span>
            <input class='datalist_item_oninput_event' type='text' value='_value_'>
          </template>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="rating-min" class="collapsible">
      <label class="tab-label" for="rating-min"><%= Gettext.gettext("Scores") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :rating_min,
              class: "min",
              step: 1,
              name: "filter[rating][min]",
              value: f.params["rating"]["min"] %>
            <%= number_input f, :rating_max,
              class: "max",
              step: 1,
              name: "filter[rating][max]",
              value: f.params["rating"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :rating_min_slider,
              class: "min-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["rating"]["min"] || 0 %>
            <%= range_input f, :rating_max_slider,
              class: "max-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["rating"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>

    <%= for param <- @conn.params
      |> Map.delete("_utf8")
      |> Map.delete("filter")
      |> Map.delete("page")
      |> Map.keys() do
        hidden_input f, "p", name: param, value: @conn.params[param]
    end %>
  <% end %>
</sidebar-filters>
