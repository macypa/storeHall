
<%= form_for @changeset, @action, [multipart: true, class: "edit_form"], fn f -> %>

  <div class="submit_button">
    <%= submit Gettext.gettext("Save") %>
  </div>
  <%= if @changeset.action do %>
    <div class="alert alert-danger">
      <p><%= Gettext.gettext("Oops, something went wrong! Please check the errors below.") %></p>
      <%= error_tag f, :details %>
    </div>
  <% end %>

  <div class="form-group">
    <%= label f, :name, Gettext.gettext("Name") %>
    <%= text_input f, :name, value: input_value(f, :name) %>
    <%= error_tag f, :name %>
    <%= error_tag f, :not_unique_name_for_user %>
  </div>

  <div class="form-group">
    <%= label f, :price, Gettext.gettext("Price") %>
    <span>
      <%= number_input f, :details_price,
              min: 0, step: 0.01,
              name: input_name(f, :details) <> "[price]",
              value: input_value(f, :details)["price"] || 0 %>
      <%= input_value(f, :details)["currency"] || Gettext.gettext("lv") %>
    </span>
    <%= label f, :price, Gettext.gettext("Original Price") %>
    <span>
      <%= number_input f, :details_price_orig,
            min: 0, step: 0.01,
            name: input_name(f, :details) <> "[price_orig]",
            value: input_value(f, :details)["price_orig"] || 0 %>
      <%= input_value(f, :details)["currency"] || Gettext.gettext("lv") %>
    </span>
    <%= label f, :discount, Gettext.gettext("Discount") %>
    <span>
      <%= number_input f, :details_discount,
            min: 0, step: 1, max: 99,
            name: input_name(f, :details) <> "[discount]",
            value: input_value(f, :details)["discount"] || 0 %>
      <%= Gettext.gettext("%") %>
    </span>
  </div>

  <div class="form-group">
    <%= label f, :tags, Gettext.gettext("Tags") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Add tags") %>'>
      <%= text_input f, :details_tags,
              class: "datalist_editable_input",
              name: input_name(f, :details) <> "[tags]",
              value: Jason.encode!(input_value(f, :details)["tags"]) %>
      <%= select f, :tags_select,
              @conn.assigns.filters["tags"]
              |> Enum.map(fn {k, _v} -> {k, k} end),
              name: nil %>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for tags")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :cities, Gettext.gettext("Cities") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Add cities") %>'>
      <%= text_input f, :details_cities,
              class: "datalist_editable_input",
              name: input_name(f, :details) <> "[cities]",
              value: Jason.encode!(input_value(f, :details)["cities"]) %>
      <%= select f, :cities_select,
              @conn.assigns.filters["cities"]
              |> Enum.map(fn {k, _v} -> {k, k} end),
              name: nil %>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for cities")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :features, Gettext.gettext("Features") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Add feature") %>' key_value_separator=":">
      <%= text_input f, :details_features, name: input_name(f, :details) <> "[features]",
              value: Jason.encode!(input_value(f, :details)["features"]) %>
      <template data-hkey="_hkey_" data-value="_value_"><span>_hkey_:</span><input class='datalist_item_oninput_event' type='text' value='_value_'></template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for features")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :Images, Gettext.gettext("Images") %>
    <div class="datalist_container">
      <input value="<%= Jason.encode!(input_value(f, :details)["images"] || []) %>">
      <template>_hkey_</template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for images")) %>
      </div>
    </div>
    <%= label f, :Images, "" %>
    <span>
      <%= file_input f, :add_images,
        name: input_name(f, :images),
        multiple: "multiple",
        class: "upload_file",
        "data-multiple-caption": "{count} files selected",
        accept: StoreHall.FileUploader.extension_whitelist |> Enum.join(",") %>
      <label for="<%= input_id(f, :add_images) %>">
        <svg class="svg_icon_upload_file"><use xlink:href="/images/sprite.svg#si-upload-file"></use></svg>
        <span><%= Gettext.gettext("Upload Images") %></span>
      </label>
      <%= error_tag f, :images %>
    </span>
  </div>

  <div class="form-group">
    <%= label f, :videos, Gettext.gettext("Videos") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Add videos") %>'>
      <%= text_input f, :details_videos, name: input_name(f, :details) <> "[videos]",
              value: Jason.encode!(input_value(f, :details)["videos"]) %>
      <template><a href="_hkey_" target="_blank">_hkey_</a></template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for videos")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :description, Gettext.gettext("Description") %>
    <%= textarea f, :details_description, name: input_name(f, :details) <> "[description]", value: input_value(f, :details)["description"] %>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("HTML tags can be used.")) %>
      </div>
  </div>

  <div class="form-group">
    <%= label f, :conditions, Gettext.gettext("Conditions") %>
    <%= textarea f, :details_conditions, name: input_name(f, :details) <> "[conditions]", value: input_value(f, :details)["conditions"] %>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("HTML tags can be used.")) %>
      </div>
  </div>

  <div class="form-group">
    <%= label f, :expiration, Gettext.gettext("Expiration") %>
    <%= date_input f, :details_expiration, pattern: "\d{4}-\d{2}-\d{2}",
                      name: input_name(f, :details) <> "[expiration]",
                      value: input_value(f, :details)["expiration"] %>
  </div>



  <%= if false do %>


    <div class="form-group">
      <%= label f, :details, Gettext.gettext("Details") %>
      <%= error_tag f, :details %>

      <%= textarea  f, :details, name: input_name(f, :details),
        value: Jason.encode!(input_value(f, :details)) |> String.replace(",\"", ",\n\"") %>
    </div>
  <% end %>


<% end %>
