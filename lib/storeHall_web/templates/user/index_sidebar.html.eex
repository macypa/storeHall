
<sidebar-filters>
  <%= form_for @conn, Routes.user_path(@conn, :index), [as: :filter, method: :get, enforce_utf8: false, id: "form-filter"], fn f -> %>

    <div class="tab">
      <!-- TODO:maybe use some spellchecker or suggestions -->
      <%= text_input f, :q, placeholder: Gettext.gettext("Search by text"),
        class: "auto-submit-item" %>
      <svg class="svg_icon search_icon"><use xlink:href="/images/sprite.svg#si-ant-search"></use></svg>

      <%= submit Gettext.gettext("Submit") %>
    </div>



    <%= if false do %>
      <label for="with-image">With image:
        <% checkbox f, :"with-image", class: "auto-submit-item", hidden_input: false %>
      </label>

      <div class="tab">
        <input type="checkbox" id="custom" class="collapsible">
        <label class="tab-label" for="custom">Custom:</label>
        <div class="tab-content">
          <% textarea  f, :"custom-filters", class: "auto-submit-item resizable-content",
          value: Jason.encode!(f.params["custom-filters"]) |> String.replace(",\"", ",\n\"") %>
        </div>
      </div>
    <% end %>


    <div class="tab">
      <input type="checkbox" id="mail_credits_ask-min" class="collapsible">
      <label class="tab-label" for="mail_credits_ask-min"><%= Gettext.gettext("mail_credits_ask") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :mail_credits_ask_min,
              class: "min",
              min: 0, step: 0.01,
              name: "filter[mail_credits_ask][min]",
              value: f.params["mail_credits_ask"]["min"] %>
            <%= number_input f, :mail_credits_ask_max,
              class: "max",
              min: 0, step: 0.01,
              name: "filter[mail_credits_ask][max]",
              value: f.params["mail_credits_ask"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :mail_credits_ask_min_slider,
              min: 0, max: 1000, step: 1,
              class: "min-slider auto-submit-item",
              value: f.params["mail_credits_ask"]["min"] || 0 %>

            <%= range_input f, :mail_credits_ask_max_slider,
              min: 0, max: 1000, step: 1,
              class: "max-slider auto-submit-item",
              value: f.params["mail_credits_ask"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="location" class="collapsible">
      <label class="tab-label" for="location"><%= Gettext.gettext("City") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :cities, class: "auto-submit-item" %>
        </div>
      </div>
    </div>


    <div class="tab">
      <input type="checkbox" id="merchant_type" class="collapsible">
      <label class="tab-label" for="merchant_type"><%= Gettext.gettext("Merchant type") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :merchant_type, class: "auto-submit-item" %>
          <%= select f, :merchant_type_select,
                    StoreHall.DefaultFilter.accepted_merchant_type(),
                    name: nil %>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="rating-min" class="collapsible">
      <label class="tab-label" for="rating-min"><%= Gettext.gettext("Scores") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :rating_min,
              class: "min",
              step: 1,
              name: "filter[rating][min]",
              value: f.params["rating"]["min"] %>
            <%= number_input f, :rating_max,
              class: "max",
              step: 1,
              name: "filter[rating][max]",
              value: f.params["rating"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :rating_min_slider,
              class: "min-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["rating"]["min"] || 0 %>
            <%= range_input f, :rating_max_slider,
              class: "max-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["rating"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="gender" class="collapsible">
      <label class="tab-label" for="gender"><%= Gettext.gettext("Gender") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :gender, class: "auto-submit-item" %>
          <%= select f, :gender_select,
                    StoreHall.DefaultFilter.accepted_gender(),
                    name: nil %>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="height-min" class="collapsible">
      <label class="tab-label" for="height-min"><%= Gettext.gettext("Height") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :height_min,
              class: "min",
              step: 1,
              name: "filter[height][min]",
              value: f.params["height"]["min"] %>
            <%= number_input f, :height_max,
              class: "max",
              step: 1,
              name: "filter[height][max]",
              value: f.params["height"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :height_min_slider,
              class: "min-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["height"]["min"] || 0 %>
            <%= range_input f, :height_max_slider,
              class: "max-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["height"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="weight-min" class="collapsible">
      <label class="tab-label" for="weight-min"><%= Gettext.gettext("Weight") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :weight_min,
              class: "min",
              step: 1,
              name: "filter[weight][min]",
              value: f.params["weight"]["min"] %>
            <%= number_input f, :weight_max,
              class: "max",
              step: 1,
              name: "filter[weight][max]",
              value: f.params["weight"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :weight_min_slider,
              class: "min-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["weight"]["min"] || 0 %>
            <%= range_input f, :weight_max_slider,
              class: "max-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["weight"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="kids-min" class="collapsible">
      <label class="tab-label" for="kids-min"><%= Gettext.gettext("Kids") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :kids_min,
              class: "min",
              step: 1,
              name: "filter[kids][min]",
              value: f.params["kids"]["min"] %>
            <%= number_input f, :kids_max,
              class: "max",
              step: 1,
              name: "filter[kids][max]",
              value: f.params["kids"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :kids_min_slider,
              class: "min-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["kids"]["min"] || 0 %>
            <%= range_input f, :kids_max_slider,
              class: "max-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["kids"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="kids_age" class="collapsible">
      <label class="tab-label" for="kids_age"><%= Gettext.gettext("Kids age") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :kids_age, class: "auto-submit-item" %>
          <%= select f, :kids_age_select,
                    StoreHall.DefaultFilter.accepted_kids_age(),
                    name: nil %>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="marital_status" class="collapsible">
      <label class="tab-label" for="marital_status"><%= Gettext.gettext("Marital status") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :marital_status, class: "auto-submit-item" %>
          <%= select f, :marital_status_select,
                    StoreHall.DefaultFilter.accepted_marital_status(),
                    name: nil %>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="interests" class="collapsible">
      <label class="tab-label" for="interests"><%= Gettext.gettext("Interests") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :interests, class: "auto-submit-item" %>
          <%= select f, :interests_select,
                    StoreHall.DefaultFilter.accepted_interests(),
                    name: nil %>
        </div>
      </div>
    </div>

    <div class="tab">
      <input type="checkbox" id="work_experience-min" class="collapsible">
      <label class="tab-label" for="work_experience-min"><%= Gettext.gettext("Work experience") %></label>
      <div class="tab-content">

        <div class="range-slider">
          <div class="rangeValues">
            <%= number_input f, :work_experience_min,
              class: "min",
              step: 1,
              name: "filter[work_experience][min]",
              value: f.params["work_experience"]["min"] %>
            <%= number_input f, :work_experience_max,
              class: "max",
              step: 1,
              name: "filter[work_experience][max]",
              value: f.params["work_experience"]["max"] %>
          </div>
          <div class="rangeSliders">
            <%= range_input f, :work_experience_min_slider,
              class: "min-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["work_experience"]["min"] || 0 %>
            <%= range_input f, :work_experience_max_slider,
              class: "max-slider auto-submit-item",
              min: 0, max: 1000, step: 1,
              value: f.params["work_experience"]["max"] || 1000 %>
          </div>
        </div>

      </div>
    </div>
    
    <div class="tab">
      <input type="checkbox" id="job_sector" class="collapsible">
      <label class="tab-label" for="job_sector"><%= Gettext.gettext("Job sector") %></label>
      <div class="tab-content">
        <div class="datalist_container" placeholder='<%= Gettext.gettext("Choose") %>'>
          <%= text_input f, :job_sector, class: "auto-submit-item" %>
          <%= select f, :job_sector_select,
                    StoreHall.DefaultFilter.accepted_job_sector(),
                    name: nil %>
        </div>
      </div>
    </div>


    <%= for param <- @conn.params
      |> Map.delete("_utf8")
      |> Map.delete("filter")
      |> Map.delete("page")
      |> Map.keys() do
        hidden_input f, "p", name: param, value: @conn.params[param]
    end %>
  <% end %>
</sidebar-filters>
