
<%= form_for @changeset, @action, [multipart: true, class: "edit_form"], fn f -> %>

  <div class="submit_button">
    <%= submit Gettext.gettext("Save") %>
  </div>
  <%= if @changeset.action do %>
    <div class="alert alert-danger">
      <p><%= Gettext.gettext("Oops, something went wrong! Please check the errors below.") %></p>
      <%= error_tag f, :details %>
    </div>
  <% end %>

  <div class="form-group">
    <%= label f, :name, Gettext.gettext("Name") %>
    <%= text_input f, :name %>
    <%= error_tag f, :name %>
  </div>

  <div class="form-group">
    <%= label f, :type, Gettext.gettext("Merchant type") %>
      <%= select f, :type_select,
              StoreHall.DefaultFilter.accepted_merchant_type(),
              name: input_name(f, :details) <> "[merchant_type]",
              selected: input_value(f, :details)["merchant_type"] || "merch_private" %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :address, Gettext.gettext("Address") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Address") %>' key_value_separator=":">
      <%= text_input f, :details_address, name: input_name(f, :details) <>"[address]", value: Jason.encode!(input_value(f, :details)["address"]) %>
      <template><span>_hkey_:</span><input class='datalist_item_oninput_event' type='text' value='_value_'></template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for Address")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :mail, Gettext.gettext("E-mail") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("E-mail") %>' key_value_separator=":">
      <%= text_input f, :details_mail, name: input_name(f, :details) <>"[mail]", value: Jason.encode!(input_value(f, :details)["mail"]) %>
      <template><span>_hkey_:</span><input class='datalist_item_oninput_event' type='text' value='_value_'></template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for mail")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :website, Gettext.gettext("Website") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Website") %>' key_value_separator=":">
      <%= text_input f, :details_web, name: input_name(f, :details) <>"[web]", value: Jason.encode!(input_value(f, :details)["web"]) %>
      <template><span>_hkey_:</span><input class='datalist_item_oninput_event' type='text' value='_value_'></template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for website")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :contacts, Gettext.gettext("contacts") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("contacts") %>' key_value_separator=":">
      <%= text_input f, :details_contacts, name: input_name(f, :details) <>"[contacts]", value: Jason.encode!(input_value(f, :details)["contacts"]) %>
      <template><span>_hkey_:</span><input class='datalist_item_oninput_event' type='text' value='_value_'></template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for contacts")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :open, Gettext.gettext("Open hours") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Open hours") %>' key_value_separator=":">
      <%= text_input f, :details_open, name: input_name(f, :details) <>"[open]", value: Jason.encode!(input_value(f, :details)["open"]) %>
      <template><span>_hkey_:</span><input class='datalist_item_oninput_event' type='text' value='_value_'></template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for open hours")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :Images, Gettext.gettext("Images") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Add image URLs") %>'>
      <%= text_input f, :details_images, name: input_name(f, :details) <> "[images]",
              value: Jason.encode!(input_value(f, :details)["images"]) %>
      <template>_hkey_</template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for images")) %>
      </div>
    </div>
    <%= label f, :Images, "" %>
    <span>
      <%= file_input f, :add_images,
        name: input_name(f, :images), 
        multiple: "multiple", 
        class: "upload_file", 
        "data-multiple-caption": "{count} files selected",
        accept: StoreHall.FileUploader.extension_whitelist |> Enum.join(",") %>
      <label for="<%= input_id(f, :add_images) %>">
        <svg class="svg_icon_upload_file"><use xlink:href="/images/sprite.svg#si-upload-file"></use></svg>
        <span><%= Gettext.gettext("Upload Images") %></span>
      </label>
      <%= error_tag f, :images %>
    </span>
  </div>

  <div class="form-group">
    <%= label f, :videos, Gettext.gettext("Videos") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Add videos") %>'>
      <%= text_input f, :details_videos, name: input_name(f, :details) <> "[videos]",
              value: Jason.encode!(input_value(f, :details)["videos"]) %>
      <template><a href="_hkey_" target="_blank">_hkey_</a></template>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for videos")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :description, Gettext.gettext("Description") %>
    <%= textarea f, :details_description, name: input_name(f, :details) <> "[description]", value: input_value(f, :details)["description"] %>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for description")) %>
      </div>
  </div>
  
  <div class="form-title" id="target_marketing">
    <%= label f, :locale, Gettext.gettext("Target Мarketing") %>
  </div>

  <div class="form-group">
    <%= label f, :marketing_consent, Gettext.gettext("marketing_consent") %>
    <div class="form_field">
      <%= select f, :marketing_marketing_consent,
              %{Gettext.gettext("agreed") => "agreed", Gettext.gettext("not agreed") => "not_agreed"},
              class: "form_field_value",
              name: input_name(f, :details) <>"[marketing_consent]",
              value: input_value(f, :details)["marketing_consent"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :mail_credits_ask, Gettext.gettext("Minimal credits earnings per mail") %>
    <div class="form_field">
      <%= number_input f, :marketing_mail_credits_ask,
              min: 0,
              class: "form_field_value",
              name: input_name(f, :details) <> "[mail_credits_ask]",
              value: input_value(f, :details)["mail_credits_ask"] %>
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for mail_credits")) %>
        <div>
          <%= Gettext.gettext("For more info and hints, please see ") %><span class="underline"><%= link to: Routes.about_path(@conn, :howto) <> "#credits" do %><%= Gettext.gettext("here") %>.<% end %>
        </div>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :gender, Gettext.gettext("Gender") %>
    <div class="form_field">
        <%= select f, :marketing_gender_select, 
              StoreHall.DefaultFilter.accepted_gender(),
                name: input_name(f, :details) <> "[gender]",
                value: input_value(f, :details)["gender"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :age, Gettext.gettext("Age") %>
    <div class="form_field">
      <%= number_input f, :marketing_age,
              min: 18,
              class: "form_field_value",
              name: input_name(f, :details) <> "[age]",
              value: input_value(f, :details)["age"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :height, Gettext.gettext("Height") %>
    <div class="form_field">
      <%= number_input f, :marketing_height,
              min: 0,
              class: "form_field_value",
              name: input_name(f, :details) <> "[height]",
              value: input_value(f, :details)["height"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :weight, Gettext.gettext("Weight") %>
    <div class="form_field">
      <%= number_input f, :marketing_weight,
              min: 0,
              class: "form_field_value",
              name: input_name(f, :details) <> "[weight]",
              value: input_value(f, :details)["weight"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :cities, Gettext.gettext("Cities") %>
    <div class="datalist_container" placeholder='<%= Gettext.gettext("Add cities") %>'>
      <%= text_input f, :marketing_cities,
              class: "datalist_editable_input",
              name: input_name(f, :details) <> "[cities]",
              value: Jason.encode!(input_value(f, :details)["cities"] || []) %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :kids, Gettext.gettext("Kids") %>
    <div class="form_field">
      <%= number_input f, :marketing_kids,
              min: 0,
              class: "form_field_value",
              name: input_name(f, :details) <> "[kids]",
              value: input_value(f, :details)["kids"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :kids_age, Gettext.gettext("Kids age") %>
    <div class="datalist_container" placeholder="">
      <%= text_input f, :marketing_kids_age,
              class: "form_field_value",
              name: input_name(f, :details) <> "[kids_age]",
              value: Jason.encode!(input_value(f, :details)["kids_age"]) %>
      <%= select f, :marketing_kids_age_select,
              StoreHall.DefaultFilter.accepted_kids_age(),
              name: nil %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :marital_status, Gettext.gettext("Marital status") %>
    <div class="form_field">
        <%= select f, :marketing_marital_status, 
              StoreHall.DefaultFilter.accepted_marital_status(),
                class: "form_field_value",
                name: input_name(f, :details) <>"[marital_status]",
                value: input_value(f, :details)["marital_status"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :interests, Gettext.gettext("Interests") %>
    <div class="datalist_container" placeholder="">
      <%= text_input f, :marketing_interests,
              class: "form_field_value",
              name: input_name(f, :details) <> "[interests]",
              value: Jason.encode!(input_value(f, :details)["interests"]) %>
      <%= select f, :marketing_interests_select,
              StoreHall.DefaultFilter.accepted_interests(),
              name: nil %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :work_experience, Gettext.gettext("Work experience") %>
    <div class="form_field">
      <%= number_input f, :marketing_work_experience,
              min: 0,
              class: "form_field_value",
              name: input_name(f, :details) <> "[work_experience]",
              value: input_value(f, :details)["work_experience"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :job_sector, Gettext.gettext("Job sector") %>
    <div class="datalist_container" placeholder="">
      <%= text_input f, :marketing_job_sector,
              class: "form_field_value",
              name: input_name(f, :details) <> "[job_sector]",
              value: Jason.encode!(input_value(f, :details)["job_sector"]) %>
      <%= select f, :marketing_job_sector_select,
              StoreHall.DefaultFilter.accepted_job_sector(),
              name: nil %>
    </div>
  </div>

  <div class="form-title" id="settings">
    <%= label f, :locale, Gettext.gettext("Settings") %>
  </div>

  <!--div class="form-group">
    <%= label f, :locale, "" %>
    <div>
      <div class="form_field">
        <span><%= Gettext.gettext("locale") %>:</span>
        <%= select f, :settings_locale, %{"Български" => "bg", "English" => "en"},
                class: "form_field_value",
                name: input_name(f, :settings) <>"[locale]",
                value: input_value(f, :settings)["locale"] %>
      </div>
    </div>
  </div-->

  <div class="form-group">
    <%= label f, :cookie_consent, Gettext.gettext("cookie_consent") %>
    <div class="form_field">
      <%= select f, :settings_cookie_consent, 
              %{Gettext.gettext("agreed") => "agreed", Gettext.gettext("not agreed") => "not_agreed"},
              class: "form_field_value",
              name: input_name(f, :settings) <>"[cookie_consent]",
              value: input_value(f, :settings)["cookie_consent"] %>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :social_buttons, Gettext.gettext("Social buttons") %> 
    <div class="form_field datalist_container" placeholder='<%= Gettext.gettext("Add social buttons") %>'>
      <%= text_input f, :details_social_buttons, class: "form_field_value",
            name: input_name(f, :settings) <>"[social_buttons]",
            value: Jason.encode!(input_value(f, :settings)["social_buttons"]) %>
      <%= select f, :social_buttons_select,
          "facebook,twitter,email,pinterest,linkedin,reddit,whatsapp,google_gmail,telegram,pocket,mix,tumblr,amazon_wish_list,aol_mail,balatarin,bibsonomy,bitty_browser,blinklist,blogger,blogmarks,bookmarks_fr,box_net,buffer,care2_news,citeulike,copy_link,design_float,diary_ru,diaspora,digg,diigo,douban,draugiem,dzone,evernote,facebook_messenger,fark,flipboard,folkd,google_bookmarks,google_classroom,hacker_news,hatena,houzz,instapaper,kakao,kik,kindle_it,known,line,livejournal,mail_ru,mastodon,mendeley,meneame,mewe,mixi,myspace,netvouz,odnoklassniki,outlook_com,papaly,pinboard,plurk,print,printfriendly,protopage_bookmarks,pusha,qzone,rediff,refind,renren,sina_weibo,sitejot,skype,slashdot,sms,stocktwits,svejo,symbaloo_bookmarks,threema,trello,tuenti,twiddla,typepad_post,viadeo,viber,vk,wanelo,wechat,wordpress,wykop,xing,yahoo_mail,yoolink,yummly"
                    |> String.split(",")
                    |> Enum.map(fn k -> {k, k} end),
          name: nil %>
      
      <div class="hint">
        <%= sanitize to_string(Gettext.gettext("form edit hint for social buttons")) %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label f, :filters, Gettext.gettext("Filters") %>
  </div>

  <div class="form-group">
    <%= label f, :filters, "" %>
    <div>
      <div class="form_field">
        <span><%= Gettext.gettext("show_with_min_rating") %>:</span>
        <%= number_input f, :settings_filters_show_with_min_rating,
                            class: "form_inner_field_value",
                            name: input_name(f, :settings) <>"[filters][show_with_min_rating]",
                            value: input_value(f, :settings)["filters"]["show_with_min_rating"] %>
      </div>
    </div>
  </div>
  <div class="form-group">
    <%= label f, :filters, "" %>
    <div>
      <div class="form_field">
        <span><%= Gettext.gettext("show_with_max_alerts") %>:</span>
        <%= number_input f, :settings_filters_show_with_max_alerts,
                            class: "form_inner_field_value",
                            name: input_name(f, :settings) <>"[filters][show_with_max_alerts]",
                            value: input_value(f, :settings)["filters"]["show_with_max_alerts"] %>
      </div>
    </div>
  </div>


  <%= if false do %>

    <div class="form-group"> <!-- should be in show only -->
      <%= label f, :labels, Gettext.gettext("Labels") %>
      <%= text_input f, :settings_labels, name: input_name(f, :settings) <>"[labels]", value: Jason.encode!(input_value(f, :settings)["labels"]) |> String.replace(",\"", ",\n\"") %>
    </div>

    <div class="form-group">
      <div class="form-image-group">
        <%= label f, :images, Gettext.gettext("Images") %>
        <%= file_input f, :add_images, name: input_name(f, :images), multiple: "multiple",
        accept: StoreHall.FileUploader.extension_whitelist |> Enum.join(",") %>
        <%= error_tag f, :images %>
      </div>

      <%= textarea  f, :details, name: input_name(f, :details), value: Jason.encode!(input_value(f, :details)) |> String.replace(",\"", ",\n\"") %>

    </div>


  <% end %>

<% end %>
